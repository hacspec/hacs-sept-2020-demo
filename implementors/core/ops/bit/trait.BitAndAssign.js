(function() {var implementors = {};
implementors["num_bigint"] = [{"text":"impl BitAndAssign&lt;BigInt&gt; for BigInt","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; BitAndAssign&lt;&amp;'a BigInt&gt; for BigInt","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;BigUint&gt; for BigUint","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; BitAndAssign&lt;&amp;'a BigUint&gt; for BigUint","synthetic":false,"types":[]}];
implementors["secret_integers"] = [{"text":"impl BitAndAssign&lt;U8&gt; for U8","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;U16&gt; for U16","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;U32&gt; for U32","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;U64&gt; for U64","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;U128&gt; for U128","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;I8&gt; for I8","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;I16&gt; for I16","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;I32&gt; for I32","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;I64&gt; for I64","synthetic":false,"types":[]},{"text":"impl BitAndAssign&lt;I128&gt; for I128","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()