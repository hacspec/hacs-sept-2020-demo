(function() {var implementors = {};
implementors["num_bigint"] = [{"text":"impl Neg for Sign","synthetic":false,"types":[]},{"text":"impl Neg for BigInt","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Neg for &amp;'a BigInt","synthetic":false,"types":[]},{"text":"impl Neg for BigUint","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Neg for &amp;'a BigUint","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Clone + Num + Neg&lt;Output = T&gt;&gt; Neg for Complex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone + Num + Neg&lt;Output = T&gt;&gt; Neg for &amp;'a Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Neg for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Integer + Neg&lt;Output = T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Neg for &amp;'a Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Integer + Neg&lt;Output = T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["secret_integers"] = [{"text":"impl Neg for U8","synthetic":false,"types":[]},{"text":"impl Neg for U16","synthetic":false,"types":[]},{"text":"impl Neg for U32","synthetic":false,"types":[]},{"text":"impl Neg for U64","synthetic":false,"types":[]},{"text":"impl Neg for U128","synthetic":false,"types":[]},{"text":"impl Neg for I8","synthetic":false,"types":[]},{"text":"impl Neg for I16","synthetic":false,"types":[]},{"text":"impl Neg for I32","synthetic":false,"types":[]},{"text":"impl Neg for I64","synthetic":false,"types":[]},{"text":"impl Neg for I128","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()